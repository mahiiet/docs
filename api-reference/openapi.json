{
  "openapi": "3.0.3",
  "info": {
    "title": "API V2",
    "description": "Rise is a blockchain first platform where by all actions are secured and executed on-chain. Rise has blockchain smart-contracts on the Arbitrum optimistic rollup chain that control the flow of funds. That means that executing a change within the Rise platform requires a wallet with permissions on the user or company's RiseID.",
    "version": "2.0.0"
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "v1Auth": {
        "type": "apiKey",
        "name": "X-Auth-Token",
        "in": "header",
        "description": "JWT token"
      }
    },
    "schemas": {}
  },
  "paths": {
    "/v1/auth/siwe": {
      "get": {
        "summary": "Get SIWE",
        "tags": [
          "V1"
        ],
        "description": "Retrieves a SIWE (Sign-In with Ethereum) message that can be used for authentication. This message is signed by the user to prove their identity.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "wallet",
            "required": true,
            "description": "Wallet address of the user."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "riseid",
            "required": true,
            "description": "RiseID of the user."
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "siwe": {
                          "type": "string",
                          "description": "The SIWE message that the user needs to sign."
                        }
                      },
                      "required": [
                        "siwe"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Bad Request"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Not Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/auth/verify": {
      "post": {
        "summary": "Verify a SIWE message and return a JWT for API authentication",
        "tags": [
          "V1"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "description": "The original SIWE message that was signed by the user."
                  },
                  "sig": {
                    "type": "string",
                    "description": "The signature generated by the user when signing the SIWE message."
                  },
                  "nonce": {
                    "type": "string",
                    "description": "A unique nonce to prevent replay attacks."
                  }
                },
                "required": [
                  "message",
                  "sig",
                  "nonce"
                ],
                "additionalProperties": false
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "jwt": {
                          "type": "string",
                          "description": "The JSON Web Token (JWT) for authenticated API requests."
                        }
                      },
                      "required": [
                        "jwt"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Bad Request"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Not Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/company/{nanoid}/users": {
      "get": {
        "summary": "Get company users",
        "tags": [
          "V1"
        ],
        "description": "Retrieves a list of users associated with the specified company identified by its nanoid.",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "minLength": 15,
              "maxLength": 15,
              "pattern": "^co\\-"
            },
            "in": "path",
            "name": "nanoid",
            "required": true,
            "description": "Unique identifier of the company."
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "users": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "nanoid": {
                                "type": "string",
                                "minLength": 15,
                                "maxLength": 15,
                                "pattern": "^us\\-",
                                "description": "Unique identifier for the user."
                              },
                              "first_name": {
                                "type": "string",
                                "description": "User's first name."
                              },
                              "last_name": {
                                "type": "string",
                                "description": "User's last name."
                              },
                              "email": {
                                "type": "string",
                                "description": "User's email address."
                              }
                            },
                            "required": [
                              "nanoid",
                              "first_name",
                              "last_name",
                              "email"
                            ],
                            "additionalProperties": false
                          }
                        }
                      },
                      "required": [
                        "users"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Bad Request"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Not Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/company/{nanoid}/address": {
      "put": {
        "summary": "Update company address details",
        "tags": [
          "V1"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "line_1": {
                    "type": "string",
                    "description": "The first line of the address."
                  },
                  "line_2": {
                    "type": "string",
                    "description": "The second line of the address, optional."
                  },
                  "city": {
                    "type": "string",
                    "description": "The city of the address."
                  },
                  "state": {
                    "type": "string",
                    "description": "The state of the address."
                  },
                  "country": {
                    "type": "string",
                    "description": "The country of the address."
                  },
                  "zip_code": {
                    "type": "string",
                    "description": "The ZIP or postal code of the address."
                  },
                  "timezone": {
                    "type": "string",
                    "description": "The timezone associated with the address."
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string",
              "minLength": 15,
              "maxLength": 15,
              "pattern": "^co\\-"
            },
            "in": "path",
            "name": "nanoid",
            "required": true,
            "description": "Unique identifier of the company."
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1
            },
            "in": "header",
            "name": "x-recaptcha-token",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1
            },
            "in": "header",
            "name": "x-recaptcha-action",
            "required": true
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  },
                  "required": [
                    "success"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Bad Request"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Not Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/company/{nanoid}/details": {
      "put": {
        "summary": "Update organization details",
        "tags": [
          "V1"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1
                  },
                  "doing_business_as": {
                    "type": "string",
                    "default": ""
                  },
                  "size": {
                    "type": "string",
                    "enum": [
                      "large_sized",
                      "medium",
                      "micro_sized",
                      "small_sized"
                    ],
                    "default": "medium"
                  },
                  "incorporation_country": {
                    "type": "string",
                    "default": ""
                  },
                  "incorporation_type": {
                    "type": "string",
                    "enum": [
                      "association",
                      "c-corporation",
                      "charitable_incorporated_organisation",
                      "chartered_company",
                      "holding_company",
                      "im_not_sure",
                      "limited_liability_company",
                      "limited_partnership",
                      "non_government_organisation",
                      "non_profit_organisation",
                      "private_limited_company",
                      "public_limited_company",
                      "s-corporation",
                      "sole_proprietorship",
                      "statutory_company",
                      "subsidiary_company",
                      "unlimited_partnership"
                    ],
                    "default": "sole_proprietorship"
                  },
                  "website": {
                    "type": "string",
                    "default": ""
                  },
                  "phone": {
                    "type": "string",
                    "minLength": 1
                  },
                  "private_data": {
                    "type": "object",
                    "properties": {
                      "us_based": {
                        "allOf": [
                          {
                            "anyOf": [
                              {
                                "type": "number"
                              },
                              {
                                "type": "string"
                              },
                              {
                                "type": "boolean"
                              }
                            ]
                          },
                          {
                            "type": "boolean"
                          }
                        ]
                      },
                      "tax_id": {
                        "type": "string",
                        "nullable": true
                      },
                      "us_work": {
                        "allOf": [
                          {
                            "anyOf": [
                              {
                                "type": "number"
                              },
                              {
                                "type": "string"
                              },
                              {
                                "type": "boolean"
                              }
                            ]
                          },
                          {
                            "type": "boolean"
                          }
                        ],
                        "default": true
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "required": [
                  "private_data"
                ],
                "additionalProperties": false
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "schema": {
              "type": "string",
              "minLength": 15,
              "maxLength": 15,
              "pattern": "^co\\-"
            },
            "in": "path",
            "name": "nanoid",
            "required": true,
            "description": "CompanyNanoid"
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1
            },
            "in": "header",
            "name": "x-recaptcha-token",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1
            },
            "in": "header",
            "name": "x-recaptcha-action",
            "required": true
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  },
                  "required": [
                    "success"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Bad Request"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Not Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get organization details",
        "tags": [
          "V1"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "minLength": 15,
              "maxLength": 15,
              "pattern": "^co\\-"
            },
            "in": "path",
            "name": "nanoid",
            "required": true,
            "description": "CompanyNanoid"
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "doing_business_as": {
                          "type": "string"
                        },
                        "size": {
                          "type": "string",
                          "enum": [
                            "large_sized",
                            "medium",
                            "micro_sized",
                            "small_sized"
                          ]
                        },
                        "incorporation_country": {
                          "type": "string"
                        },
                        "incorporation_type": {
                          "type": "string",
                          "enum": [
                            "association",
                            "c-corporation",
                            "charitable_incorporated_organisation",
                            "chartered_company",
                            "holding_company",
                            "im_not_sure",
                            "limited_liability_company",
                            "limited_partnership",
                            "non_government_organisation",
                            "non_profit_organisation",
                            "private_limited_company",
                            "public_limited_company",
                            "s-corporation",
                            "sole_proprietorship",
                            "statutory_company",
                            "subsidiary_company",
                            "unlimited_partnership"
                          ]
                        },
                        "website": {
                          "type": "string"
                        },
                        "phone": {
                          "type": "string"
                        },
                        "private_data": {
                          "type": "object",
                          "properties": {
                            "us_based": {
                              "allOf": [
                                {
                                  "anyOf": [
                                    {
                                      "type": "number"
                                    },
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "boolean"
                                    }
                                  ]
                                },
                                {
                                  "type": "boolean"
                                }
                              ]
                            },
                            "tax_id": {
                              "type": "string",
                              "nullable": true
                            },
                            "us_work": {
                              "allOf": [
                                {
                                  "anyOf": [
                                    {
                                      "type": "number"
                                    },
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "boolean"
                                    }
                                  ]
                                },
                                {
                                  "type": "boolean"
                                }
                              ]
                            }
                          },
                          "required": [
                            "us_based",
                            "tax_id",
                            "us_work"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "name",
                        "doing_business_as",
                        "size",
                        "incorporation_country",
                        "incorporation_type",
                        "website",
                        "phone",
                        "private_data"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Bad Request"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Not Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/company/{nanoid}/members/{user_nanoid}/settings": {
      "get": {
        "summary": "Get company role settings",
        "tags": [
          "V1"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "minLength": 15,
              "maxLength": 15,
              "pattern": "^co\\-"
            },
            "in": "path",
            "name": "nanoid",
            "required": true,
            "description": "CompanyNanoid"
          },
          {
            "schema": {
              "type": "string",
              "minLength": 15,
              "maxLength": 15,
              "pattern": "^us\\-"
            },
            "in": "path",
            "name": "user_nanoid",
            "required": true,
            "description": "UserNanoid"
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "payment_threshold_per_day": {
                          "type": "string",
                          "description": "The maximum payment amount allowed per day for the user, used for transaction limits."
                        },
                        "payment_threshold_per_transaction": {
                          "type": "string",
                          "description": "The maximum payment amount allowed per transaction for the user, used for transaction limits."
                        }
                      },
                      "required": [
                        "payment_threshold_per_day",
                        "payment_threshold_per_transaction"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Bad Request"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Not Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/company/{nanoid}/settings": {
      "get": {
        "summary": "Get company settings",
        "tags": [
          "V1"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "minLength": 15,
              "maxLength": 15,
              "pattern": "^co\\-"
            },
            "in": "path",
            "name": "nanoid",
            "required": true,
            "description": "CompanyNanoid"
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "payment_delay_in_minutes": {
                          "type": "number",
                          "description": "Delay in minutes for processing payments, affects when funds are available for use."
                        },
                        "invoicing_enabled": {
                          "type": "boolean",
                          "description": "Indicates whether invoicing is enabled for the company, allowing for billing and payment tracking."
                        },
                        "anonymous_users": {
                          "type": "boolean",
                          "description": "Indicates if anonymous users are allowed, affecting user privacy and data collection."
                        },
                        "default_signer": {
                          "type": "string",
                          "minLength": 15,
                          "maxLength": 15,
                          "pattern": "^us\\-",
                          "description": "The default user who will sign documents on behalf of the company."
                        },
                        "enabled_document_types": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "SOW",
                              "PSA",
                              "EA_US"
                            ]
                          },
                          "description": "List of document types that are enabled for use within the company."
                        }
                      },
                      "required": [
                        "payment_delay_in_minutes",
                        "invoicing_enabled",
                        "anonymous_users",
                        "default_signer",
                        "enabled_document_types"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Bad Request"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Not Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update company settings",
        "tags": [
          "V1"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "payment_delay_in_minutes": {
                    "type": "number",
                    "description": "Delay in minutes for processing payments, affects when funds are available for use."
                  },
                  "default_signer": {
                    "type": "string",
                    "minLength": 15,
                    "maxLength": 15,
                    "pattern": "^us\\-",
                    "description": "The default user who will sign documents on behalf of the company."
                  },
                  "anonymous_users": {
                    "type": "boolean",
                    "description": "Indicates if anonymous users are allowed, affecting user privacy and data collection."
                  },
                  "invoicing_enabled": {
                    "type": "boolean",
                    "description": "Indicates whether invoicing is enabled for the company, allowing for billing and payment tracking."
                  },
                  "enabled_document_types": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "SOW",
                        "PSA",
                        "EA_US"
                      ]
                    },
                    "description": "List of document types that are enabled for use within the company."
                  }
                },
                "required": [
                  "payment_delay_in_minutes",
                  "default_signer",
                  "anonymous_users",
                  "invoicing_enabled",
                  "enabled_document_types"
                ],
                "additionalProperties": false
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "schema": {
              "type": "string",
              "minLength": 15,
              "maxLength": 15,
              "pattern": "^co\\-"
            },
            "in": "path",
            "name": "nanoid",
            "required": true,
            "description": "CompanyNanoid"
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1
            },
            "in": "header",
            "name": "x-recaptcha-token",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1
            },
            "in": "header",
            "name": "x-recaptcha-action",
            "required": true
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  },
                  "required": [
                    "success"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Bad Request"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Not Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/company/{nanoid}/contacts": {
      "get": {
        "summary": "List organization contacts",
        "tags": [
          "V1"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "minLength": 15,
              "maxLength": 15,
              "pattern": "^co\\-"
            },
            "in": "path",
            "name": "nanoid",
            "required": true,
            "description": "CompanyNanoid"
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "admin": {
                          "type": "object",
                          "properties": {
                            "fullname": {
                              "type": "string",
                              "minLength": 1,
                              "description": "Full name of the admin contact."
                            },
                            "phone": {
                              "type": "string",
                              "description": "Phone number of the admin contact."
                            },
                            "email": {
                              "type": "string",
                              "description": "Email address of the admin contact."
                            }
                          },
                          "required": [
                            "fullname",
                            "phone",
                            "email"
                          ],
                          "additionalProperties": false
                        },
                        "document_signing": {
                          "type": "object",
                          "properties": {
                            "fullname": {
                              "type": "string",
                              "minLength": 1,
                              "description": "Full name of the document signing contact."
                            },
                            "phone": {
                              "type": "string",
                              "description": "Phone number of the document signing contact."
                            },
                            "email": {
                              "type": "string",
                              "description": "Email address of the document signing contact."
                            }
                          },
                          "required": [
                            "fullname",
                            "phone",
                            "email"
                          ],
                          "additionalProperties": false
                        },
                        "support": {
                          "type": "object",
                          "properties": {
                            "fullname": {
                              "type": "string",
                              "minLength": 1,
                              "description": "Full name of the support contact."
                            },
                            "phone": {
                              "type": "string",
                              "description": "Phone number of the support contact."
                            },
                            "email": {
                              "type": "string",
                              "description": "Email address of the support contact."
                            }
                          },
                          "required": [
                            "fullname",
                            "phone",
                            "email"
                          ],
                          "additionalProperties": false
                        },
                        "finance": {
                          "type": "object",
                          "properties": {
                            "fullname": {
                              "type": "string",
                              "minLength": 1,
                              "description": "Full name of the finance contact."
                            },
                            "phone": {
                              "type": "string",
                              "description": "Phone number of the finance contact."
                            },
                            "email": {
                              "type": "string",
                              "description": "Email address of the finance contact."
                            }
                          },
                          "required": [
                            "fullname",
                            "phone",
                            "email"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "admin"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Bad Request"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Not Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update organization contacts",
        "tags": [
          "V1"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "admin": {
                    "type": "object",
                    "properties": {
                      "fullname": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Full name of the admin contact."
                      },
                      "phone": {
                        "type": "string",
                        "description": "Phone number of the admin contact."
                      },
                      "email": {
                        "type": "string",
                        "description": "Email address of the admin contact."
                      }
                    },
                    "required": [
                      "fullname",
                      "phone",
                      "email"
                    ],
                    "additionalProperties": false
                  },
                  "document_signing": {
                    "type": "object",
                    "properties": {
                      "fullname": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Full name of the document signing contact."
                      },
                      "phone": {
                        "type": "string",
                        "description": "Phone number of the document signing contact."
                      },
                      "email": {
                        "type": "string",
                        "description": "Email address of the document signing contact."
                      }
                    },
                    "required": [
                      "fullname",
                      "phone",
                      "email"
                    ],
                    "additionalProperties": false
                  },
                  "support": {
                    "type": "object",
                    "properties": {
                      "fullname": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Full name of the support contact."
                      },
                      "phone": {
                        "type": "string",
                        "description": "Phone number of the support contact."
                      },
                      "email": {
                        "type": "string",
                        "description": "Email address of the support contact."
                      }
                    },
                    "required": [
                      "fullname",
                      "phone",
                      "email"
                    ],
                    "additionalProperties": false
                  },
                  "finance": {
                    "type": "object",
                    "properties": {
                      "fullname": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Full name of the finance contact."
                      },
                      "phone": {
                        "type": "string",
                        "description": "Phone number of the finance contact."
                      },
                      "email": {
                        "type": "string",
                        "description": "Email address of the finance contact."
                      }
                    },
                    "required": [
                      "fullname",
                      "phone",
                      "email"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "admin"
                ],
                "additionalProperties": false
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "schema": {
              "type": "string",
              "minLength": 15,
              "maxLength": 15,
              "pattern": "^co\\-"
            },
            "in": "path",
            "name": "nanoid",
            "required": true,
            "description": "CompanyNanoid"
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1
            },
            "in": "header",
            "name": "x-recaptcha-token",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1
            },
            "in": "header",
            "name": "x-recaptcha-action",
            "required": true
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  },
                  "required": [
                    "success"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Bad Request"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Not Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/company/{nanoid}/ownership": {
      "get": {
        "summary": "Get organization ownership",
        "tags": [
          "V1"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "minLength": 15,
              "maxLength": 15,
              "pattern": "^co\\-"
            },
            "in": "path",
            "name": "nanoid",
            "required": true,
            "description": "CompanyNanoid"
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "is_dao": {
                          "type": "boolean",
                          "description": "Indicates if the organization is a DAO (Decentralized Autonomous Organization)."
                        },
                        "owners": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "nanoid": {
                                "type": "string",
                                "minLength": 15,
                                "maxLength": 15,
                                "pattern": "^o\\w\\-",
                                "description": "Unique identifier of the company owner."
                              },
                              "percentage": {
                                "type": "number",
                                "minimum": 0,
                                "maximum": 100,
                                "description": "Ownership percentage of the owner."
                              },
                              "first_name": {
                                "type": "string",
                                "minLength": 1,
                                "description": "First name of the owner."
                              },
                              "last_name": {
                                "type": "string",
                                "minLength": 1,
                                "description": "Last name of the owner."
                              },
                              "dob": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Date of birth of the owner."
                              },
                              "document_id": {
                                "type": "string",
                                "description": "Document ID of the owner."
                              }
                            },
                            "required": [
                              "nanoid",
                              "percentage",
                              "first_name",
                              "last_name",
                              "dob",
                              "document_id"
                            ],
                            "additionalProperties": false
                          },
                          "minItems": 1
                        }
                      },
                      "required": [
                        "is_dao",
                        "owners"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Bad Request"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Not Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update organization owner data",
        "tags": [
          "V1"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "is_dao": {
                    "type": "boolean",
                    "description": "Indicates if the organization is a DAO (Decentralized Autonomous Organization)."
                  },
                  "owners": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "nanoid": {
                          "type": "string",
                          "minLength": 15,
                          "maxLength": 15,
                          "pattern": "^o\\w\\-",
                          "description": "Unique identifier of the company owner."
                        },
                        "percentage": {
                          "type": "number",
                          "minimum": 0,
                          "maximum": 100,
                          "description": "Ownership percentage of the owner."
                        },
                        "first_name": {
                          "type": "string",
                          "minLength": 1,
                          "description": "First name of the owner."
                        },
                        "last_name": {
                          "type": "string",
                          "minLength": 1,
                          "description": "Last name of the owner."
                        },
                        "dob": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Date of birth of the owner."
                        }
                      },
                      "required": [
                        "nanoid",
                        "percentage",
                        "first_name",
                        "last_name",
                        "dob"
                      ],
                      "additionalProperties": false
                    },
                    "minItems": 1
                  }
                },
                "required": [
                  "is_dao",
                  "owners"
                ],
                "additionalProperties": false
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "schema": {
              "type": "string",
              "minLength": 15,
              "maxLength": 15,
              "pattern": "^co\\-"
            },
            "in": "path",
            "name": "nanoid",
            "required": true,
            "description": "CompanyNanoid"
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1
            },
            "in": "header",
            "name": "x-recaptcha-token",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1
            },
            "in": "header",
            "name": "x-recaptcha-action",
            "required": true
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  },
                  "required": [
                    "success"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Bad Request"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Not Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/me": {
      "get": {
        "summary": "Get logged user data",
        "tags": [
          "V1"
        ],
        "security": [
          {
            "v1Auth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "object",
                          "properties": {
                            "nanoid": {
                              "type": "string",
                              "minLength": 15,
                              "maxLength": 15,
                              "pattern": "^us\\-",
                              "description": "UserNanoid"
                            },
                            "avatar": {
                              "type": "string"
                            },
                            "first_name": {
                              "type": "string"
                            },
                            "middle_name": {
                              "type": "string"
                            },
                            "last_name": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "nanoid",
                            "avatar",
                            "first_name",
                            "middle_name",
                            "last_name"
                          ],
                          "additionalProperties": false
                        },
                        "company": {
                          "type": "object",
                          "properties": {
                            "nanoid": {
                              "type": "string",
                              "minLength": 15,
                              "maxLength": 15,
                              "pattern": "^co\\-",
                              "description": "CompanyNanoid"
                            },
                            "avatar": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "nanoid",
                            "avatar",
                            "name"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "user"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Bad Request"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Not Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/payroll/team/{team_nanoid}": {
      "post": {
        "summary": "Enables the payroll for the team",
        "tags": [
          "V1"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "healthcare_employee_percentage": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 100,
                    "description": "Percentage of health coverage for employees (0-100%)"
                  },
                  "healthcare_dependent_percentage": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 100,
                    "description": "Percentage of health coverage for dependents (0-100%)"
                  }
                },
                "required": [
                  "healthcare_employee_percentage",
                  "healthcare_dependent_percentage"
                ],
                "additionalProperties": false
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "schema": {
              "type": "string",
              "minLength": 15,
              "maxLength": 15,
              "pattern": "^te\\-"
            },
            "in": "path",
            "name": "team_nanoid",
            "required": true,
            "description": "Unique identifier for the team in nanoid format"
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1
            },
            "in": "header",
            "name": "x-recaptcha-token",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1
            },
            "in": "header",
            "name": "x-recaptcha-action",
            "required": true
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "rise_account": {
                          "type": "string",
                          "pattern": "^0x[a-fA-F0-9]{40}$",
                          "description": "Blockchain address associated with the team"
                        }
                      },
                      "required": [
                        "rise_account"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Bad Request"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Not Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Returns team payroll configuration",
        "tags": [
          "V1"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "minLength": 15,
              "maxLength": 15,
              "pattern": "^te\\-"
            },
            "in": "path",
            "name": "team_nanoid",
            "required": true,
            "description": "Unique identifier for the team in nanoid format"
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "country_code": {
                          "type": "string"
                        },
                        "healthcare_dependent_percentage": {
                          "type": "string"
                        },
                        "healthcare_employee_percentage": {
                          "type": "string"
                        },
                        "nanoid": {
                          "type": "string",
                          "minLength": 15,
                          "maxLength": 15,
                          "pattern": "^te\\-",
                          "description": "TeamNanoid"
                        },
                        "pay_schedule": {
                          "type": "string",
                          "enum": [
                            "annually",
                            "bi_monthly",
                            "bimonthly",
                            "biweekly",
                            "monthly",
                            "quartely",
                            "six_months",
                            "weekly"
                          ]
                        },
                        "payroll_program": {
                          "type": "string",
                          "enum": [
                            "riseworks_eor_us",
                            "riseworks_inc",
                            "riseworks_pps_us"
                          ]
                        },
                        "rise_account": {
                          "type": "string",
                          "pattern": "^0x[a-fA-F0-9]{40}$"
                        }
                      },
                      "required": [
                        "country_code",
                        "healthcare_dependent_percentage",
                        "healthcare_employee_percentage",
                        "nanoid",
                        "pay_schedule",
                        "payroll_program",
                        "rise_account"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Bad Request"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Not Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/payroll/team/{team_nanoid}/period": {
      "get": {
        "summary": "Returns employee payroll table",
        "tags": [
          "V1"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "minLength": 15,
              "maxLength": 15,
              "pattern": "^te\\-"
            },
            "in": "path",
            "name": "team_nanoid",
            "required": true,
            "description": "Unique identifier for the team in nanoid format"
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "avatar": {
                            "type": "string",
                            "description": "URL of the employee's avatar image"
                          },
                          "name": {
                            "type": "string",
                            "description": "Full name of the employee"
                          },
                          "email": {
                            "type": "string",
                            "description": "Email address of the employee"
                          },
                          "nanoid": {
                            "type": "string",
                            "minLength": 15,
                            "maxLength": 15,
                            "pattern": "^us\\-",
                            "description": "Unique identifier for the user in nanoid format"
                          },
                          "payment_categories": {
                            "type": "object",
                            "properties": {
                              "netpay": {
                                "type": "object",
                                "properties": {
                                  "amount_cents": {
                                    "type": "number"
                                  },
                                  "currency": {
                                    "type": "string",
                                    "enum": [
                                      "USD"
                                    ]
                                  }
                                },
                                "required": [
                                  "amount_cents",
                                  "currency"
                                ],
                                "additionalProperties": false
                              },
                              "grosspay": {
                                "type": "object",
                                "properties": {
                                  "amount_cents": {
                                    "type": "number"
                                  },
                                  "currency": {
                                    "type": "string",
                                    "enum": [
                                      "USD"
                                    ]
                                  }
                                },
                                "required": [
                                  "amount_cents",
                                  "currency"
                                ],
                                "additionalProperties": false
                              },
                              "salaries": {
                                "type": "object",
                                "properties": {
                                  "amount_cents": {
                                    "type": "number"
                                  },
                                  "currency": {
                                    "type": "string",
                                    "enum": [
                                      "USD"
                                    ]
                                  }
                                },
                                "required": [
                                  "amount_cents",
                                  "currency"
                                ],
                                "additionalProperties": false
                              },
                              "extras": {
                                "type": "object",
                                "properties": {
                                  "signing_bonus": {
                                    "type": "object",
                                    "properties": {
                                      "amount_cents": {
                                        "type": "number"
                                      },
                                      "currency": {
                                        "type": "string",
                                        "enum": [
                                          "USD"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "amount_cents",
                                      "currency"
                                    ],
                                    "additionalProperties": false
                                  },
                                  "stipends": {
                                    "type": "object",
                                    "properties": {
                                      "amount_cents": {
                                        "type": "number"
                                      },
                                      "currency": {
                                        "type": "string",
                                        "enum": [
                                          "USD"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "amount_cents",
                                      "currency"
                                    ],
                                    "additionalProperties": false
                                  },
                                  "one_off_bonuses": {
                                    "type": "object",
                                    "properties": {
                                      "amount_cents": {
                                        "type": "number"
                                      },
                                      "currency": {
                                        "type": "string",
                                        "enum": [
                                          "USD"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "amount_cents",
                                      "currency"
                                    ],
                                    "additionalProperties": false
                                  },
                                  "variable_compensations": {
                                    "type": "object",
                                    "properties": {
                                      "bonus": {
                                        "type": "object",
                                        "properties": {
                                          "amount_cents": {
                                            "type": "number"
                                          },
                                          "currency": {
                                            "type": "string",
                                            "enum": [
                                              "USD"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "amount_cents",
                                          "currency"
                                        ],
                                        "additionalProperties": false
                                      },
                                      "commission": {
                                        "type": "object",
                                        "properties": {
                                          "amount_cents": {
                                            "type": "number"
                                          },
                                          "currency": {
                                            "type": "string",
                                            "enum": [
                                              "USD"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "amount_cents",
                                          "currency"
                                        ],
                                        "additionalProperties": false
                                      },
                                      "reimbursement": {
                                        "type": "object",
                                        "properties": {
                                          "amount_cents": {
                                            "type": "number"
                                          },
                                          "currency": {
                                            "type": "string",
                                            "enum": [
                                              "USD"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "amount_cents",
                                          "currency"
                                        ],
                                        "additionalProperties": false
                                      }
                                    },
                                    "required": [
                                      "bonus",
                                      "commission",
                                      "reimbursement"
                                    ],
                                    "additionalProperties": false
                                  }
                                },
                                "required": [
                                  "signing_bonus",
                                  "stipends",
                                  "one_off_bonuses",
                                  "variable_compensations"
                                ],
                                "additionalProperties": false
                              },
                              "healthcare": {
                                "type": "object",
                                "properties": {
                                  "employee": {
                                    "type": "object",
                                    "properties": {
                                      "amount_cents": {
                                        "type": "number"
                                      },
                                      "currency": {
                                        "type": "string",
                                        "enum": [
                                          "USD"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "amount_cents",
                                      "currency"
                                    ],
                                    "additionalProperties": false
                                  },
                                  "employer": {
                                    "type": "object",
                                    "properties": {
                                      "amount_cents": {
                                        "type": "number"
                                      },
                                      "currency": {
                                        "type": "string",
                                        "enum": [
                                          "USD"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "amount_cents",
                                      "currency"
                                    ],
                                    "additionalProperties": false
                                  }
                                },
                                "required": [
                                  "employee",
                                  "employer"
                                ],
                                "additionalProperties": false
                              },
                              "retirement": {
                                "type": "object",
                                "properties": {
                                  "employee": {
                                    "type": "object",
                                    "properties": {
                                      "amount_cents": {
                                        "type": "number"
                                      },
                                      "currency": {
                                        "type": "string",
                                        "enum": [
                                          "USD"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "amount_cents",
                                      "currency"
                                    ],
                                    "additionalProperties": false
                                  },
                                  "employer": {
                                    "type": "object",
                                    "properties": {
                                      "amount_cents": {
                                        "type": "number"
                                      },
                                      "currency": {
                                        "type": "string",
                                        "enum": [
                                          "USD"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "amount_cents",
                                      "currency"
                                    ],
                                    "additionalProperties": false
                                  }
                                },
                                "required": [
                                  "employee",
                                  "employer"
                                ],
                                "additionalProperties": false
                              },
                              "taxes": {
                                "type": "object",
                                "properties": {
                                  "employee": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "amount": {
                                          "type": "object",
                                          "properties": {
                                            "amount_cents": {
                                              "type": "number"
                                            },
                                            "currency": {
                                              "type": "string",
                                              "enum": [
                                                "USD"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "amount_cents",
                                            "currency"
                                          ],
                                          "additionalProperties": false
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "amount"
                                      ],
                                      "additionalProperties": false
                                    }
                                  },
                                  "employer": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "amount": {
                                          "type": "object",
                                          "properties": {
                                            "amount_cents": {
                                              "type": "number"
                                            },
                                            "currency": {
                                              "type": "string",
                                              "enum": [
                                                "USD"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "amount_cents",
                                            "currency"
                                          ],
                                          "additionalProperties": false
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "amount"
                                      ],
                                      "additionalProperties": false
                                    }
                                  }
                                },
                                "required": [
                                  "employee",
                                  "employer"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "netpay",
                              "grosspay",
                              "salaries",
                              "extras",
                              "healthcare",
                              "retirement",
                              "taxes"
                            ],
                            "additionalProperties": false
                          }
                        },
                        "required": [
                          "avatar",
                          "name",
                          "email",
                          "nanoid",
                          "payment_categories"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Bad Request"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Not Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/payroll/team/{team_nanoid}/period/card": {
      "get": {
        "summary": "Returns employee payroll card details",
        "tags": [
          "V1"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "minLength": 15,
              "maxLength": 15,
              "pattern": "^te\\-"
            },
            "in": "path",
            "name": "team_nanoid",
            "required": true,
            "description": "Unique identifier for the team in nanoid format"
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "cash_requirements": {
                          "type": "object",
                          "properties": {
                            "currency": {
                              "type": "string",
                              "description": "Currency of the cash requirements amount"
                            },
                            "amount_cents": {
                              "type": "number",
                              "description": "Total cash requirements amount in cents"
                            },
                            "state": {
                              "type": "string",
                              "description": "State of the cash requirements amount"
                            }
                          },
                          "required": [
                            "currency",
                            "amount_cents",
                            "state"
                          ],
                          "additionalProperties": false
                        },
                        "required_deposit": {
                          "type": "object",
                          "properties": {
                            "currency": {
                              "type": "string",
                              "description": "Currency of the required deposit amount"
                            },
                            "amount_cents": {
                              "type": "number",
                              "description": "Total required deposit amount in cents"
                            }
                          },
                          "required": [
                            "currency",
                            "amount_cents"
                          ],
                          "additionalProperties": false
                        },
                        "previous_cycle_balance": {
                          "type": "object",
                          "properties": {
                            "currency": {
                              "type": "string",
                              "description": "Currency of the previous cycle balance"
                            },
                            "amount_cents": {
                              "type": "number",
                              "description": "Total previous cycle balance in cents"
                            }
                          },
                          "required": [
                            "currency",
                            "amount_cents"
                          ],
                          "additionalProperties": false
                        },
                        "current_balance": {
                          "type": "object",
                          "properties": {
                            "currency": {
                              "type": "string",
                              "description": "Currency of the current balance"
                            },
                            "amount_cents": {
                              "type": "number",
                              "description": "Total current balance in cents"
                            }
                          },
                          "required": [
                            "currency",
                            "amount_cents"
                          ],
                          "additionalProperties": false
                        },
                        "pay_cycle": {
                          "type": "object",
                          "properties": {
                            "start_date": {
                              "allOf": [
                                {
                                  "anyOf": [
                                    {
                                      "type": "number"
                                    },
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "string",
                                      "format": "date-time"
                                    }
                                  ]
                                },
                                {
                                  "type": "string",
                                  "format": "date-time"
                                }
                              ],
                              "description": "Start date of the pay cycle"
                            },
                            "end_date": {
                              "allOf": [
                                {
                                  "anyOf": [
                                    {
                                      "type": "number"
                                    },
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "string",
                                      "format": "date-time"
                                    }
                                  ]
                                },
                                {
                                  "type": "string",
                                  "format": "date-time"
                                }
                              ],
                              "description": "End date of the pay cycle"
                            }
                          },
                          "required": [
                            "start_date",
                            "end_date"
                          ],
                          "additionalProperties": false
                        },
                        "last_day_to_update": {
                          "allOf": [
                            {
                              "anyOf": [
                                {
                                  "type": "number"
                                },
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "string",
                                  "format": "date-time"
                                }
                              ]
                            },
                            {
                              "type": "string",
                              "format": "date-time"
                            }
                          ],
                          "description": "Last day to update payroll information"
                        },
                        "pay_date": {
                          "allOf": [
                            {
                              "anyOf": [
                                {
                                  "type": "number"
                                },
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "string",
                                  "format": "date-time"
                                }
                              ]
                            },
                            {
                              "type": "string",
                              "format": "date-time"
                            }
                          ],
                          "description": "Date when the payment is processed"
                        },
                        "due_date": {
                          "allOf": [
                            {
                              "anyOf": [
                                {
                                  "type": "number"
                                },
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "string",
                                  "format": "date-time"
                                }
                              ]
                            },
                            {
                              "type": "string",
                              "format": "date-time"
                            }
                          ],
                          "description": "Due date for any outstanding payments"
                        }
                      },
                      "required": [
                        "cash_requirements",
                        "required_deposit",
                        "previous_cycle_balance",
                        "current_balance",
                        "pay_cycle",
                        "last_day_to_update",
                        "pay_date",
                        "due_date"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Bad Request"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Not Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/team/{nanoid}/users": {
      "get": {
        "summary": "Get team users",
        "tags": [
          "V1"
        ],
        "description": "Retrieves a list of users associated with the specified team identified by its nanoid. This endpoint is useful for obtaining user details for a specific team, including their names and email addresses.",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "minLength": 15,
              "maxLength": 15,
              "pattern": "^te\\-"
            },
            "in": "path",
            "name": "nanoid",
            "required": true,
            "description": "Unique identifier of the team for which to retrieve users."
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "users": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "nanoid": {
                                "type": "string",
                                "minLength": 15,
                                "maxLength": 15,
                                "pattern": "^us\\-",
                                "description": "Unique identifier for the user."
                              },
                              "first_name": {
                                "type": "string",
                                "description": "User's first name."
                              },
                              "last_name": {
                                "type": "string",
                                "description": "User's last name."
                              },
                              "email": {
                                "type": "string",
                                "description": "User's email address."
                              }
                            },
                            "required": [
                              "nanoid",
                              "first_name",
                              "last_name",
                              "email"
                            ],
                            "additionalProperties": false
                          }
                        }
                      },
                      "required": [
                        "users"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Bad Request"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Not Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/team/{nanoid}/settings": {
      "get": {
        "summary": "Get team settings",
        "tags": [
          "V1"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "minLength": 15,
              "maxLength": 15,
              "pattern": "^te\\-"
            },
            "in": "path",
            "name": "nanoid",
            "required": true,
            "description": "TeamNanoid"
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "payment_delay_in_minutes": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "payment_delay_in_minutes"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Bad Request"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Not Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update team settings",
        "tags": [
          "V1"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "payment_delay_in_minutes": {
                    "type": "number"
                  }
                },
                "required": [
                  "payment_delay_in_minutes"
                ],
                "additionalProperties": false
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "schema": {
              "type": "string",
              "minLength": 15,
              "maxLength": 15,
              "pattern": "^te\\-"
            },
            "in": "path",
            "name": "nanoid",
            "required": true,
            "description": "TeamNanoid"
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1
            },
            "in": "header",
            "name": "x-recaptcha-token",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1
            },
            "in": "header",
            "name": "x-recaptcha-action",
            "required": true
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  },
                  "required": [
                    "success"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Bad Request"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Not Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/team/{nanoid}": {
      "get": {
        "summary": "Get team by nanoid",
        "tags": [
          "V1"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "minLength": 15,
              "maxLength": 15,
              "pattern": "^te\\-"
            },
            "in": "path",
            "name": "nanoid",
            "required": true,
            "description": "TeamNanoid"
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "nanoid": {
                          "type": "string",
                          "description": "Unique identifier for the team."
                        },
                        "name": {
                          "type": "string",
                          "minLength": 1,
                          "description": "Name of the team."
                        },
                        "avatar": {
                          "type": "string",
                          "description": "URL of the team avatar."
                        },
                        "balance": {
                          "type": "string",
                          "description": "Current balance of the team."
                        },
                        "administrators": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "relationship_nanoid": {
                                "type": "string",
                                "description": "Unique identifier for the relationship of the administrator."
                              },
                              "user_nanoid": {
                                "type": "string",
                                "description": "Unique identifier for the user."
                              },
                              "avatar": {
                                "type": "string",
                                "description": "URL of the administrator's avatar."
                              },
                              "first_name": {
                                "type": "string",
                                "description": "First name of the administrator."
                              },
                              "last_name": {
                                "type": "string",
                                "description": "Last name of the administrator."
                              },
                              "email": {
                                "type": "string",
                                "description": "Email address of the administrator."
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "team_admin",
                                  "team_finance_admin",
                                  "team_viewer"
                                ],
                                "description": "Role type of the administrator within the team."
                              }
                            },
                            "required": [
                              "relationship_nanoid",
                              "user_nanoid",
                              "avatar",
                              "first_name",
                              "last_name",
                              "email",
                              "type"
                            ],
                            "additionalProperties": false
                          }
                        }
                      },
                      "required": [
                        "nanoid",
                        "name",
                        "avatar",
                        "balance",
                        "administrators"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Bad Request"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Not Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete team by nanoid",
        "tags": [
          "V1"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "minLength": 15,
              "maxLength": 15,
              "pattern": "^te\\-"
            },
            "in": "path",
            "name": "nanoid",
            "required": true,
            "description": "TeamNanoid"
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1
            },
            "in": "header",
            "name": "x-recaptcha-token",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1
            },
            "in": "header",
            "name": "x-recaptcha-action",
            "required": true
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  },
                  "required": [
                    "success"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Bad Request"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Not Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update team by nanoid",
        "tags": [
          "V1"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1
                  }
                },
                "required": [
                  "name"
                ],
                "additionalProperties": false
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "schema": {
              "type": "string",
              "minLength": 15,
              "maxLength": 15,
              "pattern": "^te\\-"
            },
            "in": "path",
            "name": "nanoid",
            "required": true,
            "description": "TeamNanoid"
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1
            },
            "in": "header",
            "name": "x-recaptcha-token",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1
            },
            "in": "header",
            "name": "x-recaptcha-action",
            "required": true
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "minLength": 1,
                          "description": "Name of the team."
                        },
                        "nanoid": {
                          "type": "string",
                          "description": "Unique identifier for the team."
                        },
                        "avatar": {
                          "type": "string",
                          "description": "URL of the team avatar."
                        }
                      },
                      "required": [
                        "name",
                        "nanoid",
                        "avatar"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Bad Request"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Not Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/team": {
      "post": {
        "summary": "Create a team",
        "tags": [
          "V1"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Name of the team, must be at least 1 character long and trimmed"
                  },
                  "company_nanoid": {
                    "type": "string",
                    "minLength": 15,
                    "maxLength": 15,
                    "pattern": "^co\\-",
                    "description": "Unique identifier for the company in nanoid format"
                  },
                  "admins": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "nanoid": {
                          "type": "string",
                          "minLength": 15,
                          "maxLength": 15,
                          "pattern": "^us\\-",
                          "description": "Unique identifier for the admin user in nanoid format"
                        },
                        "type": {
                          "allOf": [
                            {
                              "type": "string",
                              "enum": [
                                "team_admin",
                                "team_finance_admin",
                                "team_viewer"
                              ]
                            },
                            {}
                          ],
                          "description": "Role type of the admin within the team, can be team_admin, team_finance_admin, or team_viewer"
                        }
                      },
                      "required": [
                        "nanoid",
                        "type"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "avatar_file_name": {
                    "type": "string",
                    "description": "Optional filename for the team avatar"
                  },
                  "withdraw_fee_coverage": {
                    "type": "boolean",
                    "description": "Indicates whether the team covers withdrawal fees"
                  }
                },
                "required": [
                  "name",
                  "company_nanoid",
                  "admins",
                  "withdraw_fee_coverage"
                ],
                "additionalProperties": false
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "schema": {
              "type": "string",
              "minLength": 1
            },
            "in": "header",
            "name": "x-recaptcha-token",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1
            },
            "in": "header",
            "name": "x-recaptcha-action",
            "required": true
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "minLength": 1,
                          "description": "Name of the team."
                        },
                        "nanoid": {
                          "type": "string",
                          "description": "Unique identifier for the team."
                        },
                        "avatar": {
                          "type": "string",
                          "description": "URL of the team avatar."
                        }
                      },
                      "required": [
                        "name",
                        "nanoid",
                        "avatar"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Bad Request"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Not Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/team/{team_nanoid}/member/{user_nanoid}/summary": {
      "get": {
        "summary": "Get team member summary",
        "tags": [
          "V1"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "minLength": 15,
              "maxLength": 15,
              "pattern": "^te\\-"
            },
            "in": "path",
            "name": "team_nanoid",
            "required": true,
            "description": "TeamNanoid"
          },
          {
            "schema": {
              "type": "string",
              "minLength": 15,
              "maxLength": 15,
              "pattern": "^us\\-"
            },
            "in": "path",
            "name": "user_nanoid",
            "required": true,
            "description": "UserNanoid"
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "object",
                          "properties": {
                            "nanoid": {
                              "type": "string",
                              "minLength": 15,
                              "maxLength": 15,
                              "pattern": "^us\\-",
                              "description": "Unique identifier for the user"
                            },
                            "avatar": {
                              "type": "string",
                              "description": "URL of the user's avatar"
                            },
                            "first_name": {
                              "type": "string",
                              "description": "User's first name"
                            },
                            "middle_name": {
                              "type": "string",
                              "description": "User's middle name"
                            },
                            "last_name": {
                              "type": "string",
                              "description": "User's last name"
                            },
                            "email": {
                              "type": "string",
                              "description": "User's email address"
                            },
                            "blockchain_address": {
                              "type": "string",
                              "description": "User's blockchain wallet address"
                            },
                            "phone": {
                              "type": "string",
                              "description": "User's phone number"
                            },
                            "dob": {
                              "type": "string",
                              "nullable": true,
                              "description": "User's date of birth, nullable"
                            },
                            "address": {
                              "type": "object",
                              "properties": {
                                "line_1": {
                                  "type": "string",
                                  "description": "Primary address line"
                                },
                                "line_2": {
                                  "type": "string",
                                  "description": "Secondary address line"
                                },
                                "city": {
                                  "type": "string",
                                  "description": "City of residence"
                                },
                                "state": {
                                  "type": "string",
                                  "description": "State or region"
                                },
                                "country": {
                                  "type": "string",
                                  "description": "Country of residence"
                                },
                                "zip_code": {
                                  "type": "string",
                                  "description": "Postal code"
                                },
                                "timezone": {
                                  "type": "string",
                                  "description": "User's timezone"
                                }
                              },
                              "required": [
                                "line_1",
                                "line_2",
                                "city",
                                "state",
                                "country",
                                "zip_code",
                                "timezone"
                              ],
                              "additionalProperties": false
                            },
                            "social": {
                              "type": "object",
                              "properties": {
                                "linkedin": {
                                  "type": "string",
                                  "description": "User's LinkedIn profile URL"
                                },
                                "discord": {
                                  "type": "string",
                                  "description": "User's Discord handle"
                                },
                                "website": {
                                  "type": "string",
                                  "description": "User's personal website"
                                },
                                "x": {
                                  "type": "string",
                                  "description": "User's handle on platform X"
                                }
                              },
                              "required": [
                                "linkedin",
                                "discord",
                                "website",
                                "x"
                              ],
                              "additionalProperties": false
                            },
                            "certifications": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "nanoid": {
                                    "type": "string",
                                    "minLength": 15,
                                    "maxLength": 15,
                                    "pattern": "^ce\\-",
                                    "description": "Unique identifier for the certification"
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "Title of the certification"
                                  },
                                  "website": {
                                    "type": "string",
                                    "description": "Website URL for certification details"
                                  },
                                  "year": {
                                    "type": "number",
                                    "description": "Year the certification was obtained"
                                  },
                                  "file": {
                                    "type": "string",
                                    "description": "URL of the file related to the certification"
                                  }
                                },
                                "required": [
                                  "nanoid",
                                  "title",
                                  "website",
                                  "year",
                                  "file"
                                ],
                                "additionalProperties": false
                              },
                              "description": "List of user's certifications"
                            },
                            "onboarding": {
                              "type": "object",
                              "properties": {
                                "onboarded": {
                                  "allOf": [
                                    {
                                      "anyOf": [
                                        {
                                          "type": "number"
                                        },
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "boolean"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "boolean"
                                    }
                                  ],
                                  "description": "Indicates whether the user is onboarded"
                                },
                                "step": {
                                  "type": "string",
                                  "enum": [
                                    "complete",
                                    "compliance_process",
                                    "details",
                                    "initial",
                                    "riseid",
                                    "security",
                                    "signer",
                                    "signing",
                                    "v1_migration_in_progress",
                                    "v1_migration_need_rsk"
                                  ],
                                  "nullable": true,
                                  "description": "Current onboarding step, nullable"
                                },
                                "role": {
                                  "type": "string",
                                  "enum": [
                                    "admin",
                                    "payee",
                                    "payer",
                                    "viewer"
                                  ],
                                  "nullable": true,
                                  "description": "User's role during onboarding, nullable"
                                },
                                "moderation_status": {
                                  "type": "string",
                                  "enum": [
                                    "approved",
                                    "pending",
                                    "rejected",
                                    "submitted"
                                  ],
                                  "nullable": true,
                                  "description": "Moderation status during onboarding, nullable"
                                }
                              },
                              "required": [
                                "onboarded",
                                "step",
                                "role",
                                "moderation_status"
                              ],
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "nanoid",
                            "avatar",
                            "first_name",
                            "middle_name",
                            "last_name",
                            "email",
                            "blockchain_address",
                            "phone",
                            "dob",
                            "address",
                            "social",
                            "certifications",
                            "onboarding"
                          ],
                          "additionalProperties": false
                        },
                        "relationship_type": {
                          "type": "string",
                          "enum": [
                            "team_employee",
                            "contractor"
                          ],
                          "description": "Type of relationship with the team"
                        },
                        "company": {
                          "type": "object",
                          "properties": {
                            "nanoid": {
                              "type": "string",
                              "minLength": 15,
                              "maxLength": 15,
                              "pattern": "^co\\-",
                              "description": "Unique identifier for the company"
                            },
                            "avatar": {
                              "type": "string",
                              "description": "URL of the company's avatar"
                            },
                            "name": {
                              "type": "string",
                              "description": "Company's name"
                            },
                            "website": {
                              "type": "string",
                              "description": "Company's website URL"
                            },
                            "blockchain_address": {
                              "type": "string",
                              "description": "Company's blockchain wallet address"
                            },
                            "address": {
                              "type": "object",
                              "properties": {
                                "line_1": {
                                  "type": "string",
                                  "description": "Primary address line"
                                },
                                "line_2": {
                                  "type": "string",
                                  "description": "Secondary address line"
                                },
                                "city": {
                                  "type": "string",
                                  "description": "City of the company"
                                },
                                "state": {
                                  "type": "string",
                                  "description": "State or region"
                                },
                                "country": {
                                  "type": "string",
                                  "description": "Country of the company"
                                },
                                "zip_code": {
                                  "type": "string",
                                  "description": "Postal code"
                                },
                                "timezone": {
                                  "type": "string",
                                  "description": "Company's timezone"
                                }
                              },
                              "required": [
                                "line_1",
                                "line_2",
                                "city",
                                "state",
                                "country",
                                "zip_code",
                                "timezone"
                              ],
                              "additionalProperties": false
                            },
                            "admin_contact": {
                              "type": "object",
                              "properties": {
                                "fullname": {
                                  "type": "string",
                                  "description": "Administrator's full name"
                                },
                                "phone": {
                                  "type": "string",
                                  "description": "Administrator's phone number"
                                },
                                "email": {
                                  "type": "string",
                                  "description": "Administrator's email address"
                                }
                              },
                              "required": [
                                "fullname",
                                "phone",
                                "email"
                              ],
                              "additionalProperties": false,
                              "nullable": true,
                              "description": "Contact information for the company administrator"
                            },
                            "incorporation_country": {
                              "type": "string",
                              "description": "Country of incorporation"
                            },
                            "incorporation_type": {
                              "type": "string",
                              "enum": [
                                "association",
                                "c-corporation",
                                "charitable_incorporated_organisation",
                                "chartered_company",
                                "holding_company",
                                "im_not_sure",
                                "limited_liability_company",
                                "limited_partnership",
                                "non_government_organisation",
                                "non_profit_organisation",
                                "private_limited_company",
                                "public_limited_company",
                                "s-corporation",
                                "sole_proprietorship",
                                "statutory_company",
                                "subsidiary_company",
                                "unlimited_partnership"
                              ],
                              "description": "Type of incorporation"
                            },
                            "private_data": {
                              "type": "object",
                              "properties": {
                                "tax_id": {
                                  "type": "string",
                                  "description": "Company's tax identification number"
                                }
                              },
                              "required": [
                                "tax_id"
                              ],
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "nanoid",
                            "avatar",
                            "name",
                            "website",
                            "blockchain_address",
                            "address",
                            "admin_contact",
                            "incorporation_country",
                            "incorporation_type",
                            "private_data"
                          ],
                          "additionalProperties": false,
                          "description": "Details of the associated company, optional"
                        },
                        "pay_schedules": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "nanoid": {
                                "type": "string",
                                "minLength": 15,
                                "maxLength": 15,
                                "pattern": "^ps\\-",
                                "description": "Unique identifier for the pay schedule"
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "milestone",
                                  "recurring"
                                ],
                                "description": "Type of pay schedule"
                              },
                              "amount": {
                                "type": "string",
                                "description": "Payment amount"
                              },
                              "payments_amount": {
                                "type": "number",
                                "description": "Total number of payments"
                              },
                              "start_date": {
                                "allOf": [
                                  {
                                    "anyOf": [
                                      {
                                        "type": "number"
                                      },
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "type": "string",
                                        "format": "date-time"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "string",
                                    "format": "date-time"
                                  }
                                ],
                                "description": "Start date of the pay schedule"
                              },
                              "end_date": {
                                "allOf": [
                                  {
                                    "anyOf": [
                                      {
                                        "type": "number"
                                      },
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "type": "string",
                                        "format": "date-time"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "string",
                                    "format": "date-time"
                                  }
                                ],
                                "description": "End date of the pay schedule"
                              }
                            },
                            "required": [
                              "nanoid",
                              "type",
                              "amount",
                              "payments_amount",
                              "start_date",
                              "end_date"
                            ],
                            "additionalProperties": false
                          },
                          "description": "List of pay schedules associated with the user"
                        }
                      },
                      "required": [
                        "user",
                        "relationship_type",
                        "pay_schedules"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Bad Request"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Not Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/team/{team_nanoid}/member/{user_nanoid}/settings": {
      "get": {
        "summary": "Get team member settings",
        "tags": [
          "V1"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "minLength": 15,
              "maxLength": 15,
              "pattern": "^te\\-"
            },
            "in": "path",
            "name": "team_nanoid",
            "required": true,
            "description": "TeamNanoid"
          },
          {
            "schema": {
              "type": "string",
              "minLength": 15,
              "maxLength": 15,
              "pattern": "^us\\-"
            },
            "in": "path",
            "name": "user_nanoid",
            "required": true,
            "description": "UserNanoid"
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "withdraw_fee_coverage": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "withdraw_fee_coverage"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Bad Request"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Not Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update team member settings",
        "tags": [
          "V1"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "withdraw_fee_coverage": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "withdraw_fee_coverage"
                ],
                "additionalProperties": false
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "schema": {
              "type": "string",
              "minLength": 15,
              "maxLength": 15,
              "pattern": "^te\\-"
            },
            "in": "path",
            "name": "team_nanoid",
            "required": true,
            "description": "TeamNanoid"
          },
          {
            "schema": {
              "type": "string",
              "minLength": 15,
              "maxLength": 15,
              "pattern": "^us\\-"
            },
            "in": "path",
            "name": "user_nanoid",
            "required": true,
            "description": "UserNanoid"
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1
            },
            "in": "header",
            "name": "x-recaptcha-token",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1
            },
            "in": "header",
            "name": "x-recaptcha-action",
            "required": true
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  },
                  "required": [
                    "success"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Bad Request"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Not Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/organizations": {
      "get": {
        "summary": "Get user organization's",
        "tags": [
          "V1"
        ],
        "description": "Retrieves a list of organizations associated with the logged-in user.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "companies": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "nanoid": {
                                "type": "string",
                                "minLength": 15,
                                "maxLength": 15,
                                "pattern": "^co\\-",
                                "description": "Unique identifier for the company."
                              },
                              "avatar": {
                                "type": "string",
                                "description": "URL of the company's avatar image."
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of the company."
                              }
                            },
                            "required": [
                              "nanoid",
                              "avatar",
                              "name"
                            ],
                            "additionalProperties": false
                          }
                        }
                      },
                      "required": [
                        "companies"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Bad Request"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Not Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/teams": {
      "get": {
        "summary": "Get user team's",
        "tags": [
          "V1"
        ],
        "description": "Retrieves a list of teams associated with the logged-in user.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "teams": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "nanoid": {
                                "type": "string",
                                "description": "Unique identifier for the team."
                              },
                              "name": {
                                "type": "string",
                                "minLength": 1,
                                "description": "Name of the team."
                              },
                              "avatar": {
                                "type": "string",
                                "description": "URL of the team's avatar image."
                              },
                              "balance": {
                                "type": "string",
                                "description": "Balance associated with the team."
                              },
                              "payees_amount": {
                                "type": "number",
                                "description": "Number of payees in the team."
                              },
                              "administrators_amount": {
                                "type": "number",
                                "description": "Number of administrators in the team."
                              }
                            },
                            "required": [
                              "nanoid",
                              "name",
                              "avatar",
                              "balance",
                              "payees_amount",
                              "administrators_amount"
                            ],
                            "additionalProperties": false
                          }
                        }
                      },
                      "required": [
                        "teams"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Bad Request"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Not Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/address": {
      "put": {
        "summary": "Update user address details",
        "tags": [
          "V1"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "line_1": {
                    "type": "string",
                    "description": "The first line of the address."
                  },
                  "line_2": {
                    "type": "string",
                    "description": "The second line of the address, optional."
                  },
                  "city": {
                    "type": "string",
                    "description": "The city of the address."
                  },
                  "state": {
                    "type": "string",
                    "description": "The state of the address."
                  },
                  "country": {
                    "type": "string",
                    "description": "The country of the address."
                  },
                  "zip_code": {
                    "type": "string",
                    "description": "The ZIP or postal code of the address."
                  },
                  "timezone": {
                    "type": "string",
                    "description": "The timezone associated with the address."
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string",
              "minLength": 1
            },
            "in": "header",
            "name": "x-recaptcha-token",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1
            },
            "in": "header",
            "name": "x-recaptcha-action",
            "required": true
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  },
                  "required": [
                    "success"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Bad Request"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Not Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/avatar/update": {
      "post": {
        "summary": "Update user avatar",
        "tags": [
          "V1"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "file_name": {
                    "type": "string",
                    "minLength": 1
                  }
                },
                "required": [
                  "file_name"
                ],
                "additionalProperties": false
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "schema": {
              "type": "string",
              "minLength": 1
            },
            "in": "header",
            "name": "x-recaptcha-token",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1
            },
            "in": "header",
            "name": "x-recaptcha-action",
            "required": true
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "data": {
                      "type": "string",
                      "enum": [
                        "Your avatar was updated"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Bad Request"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Not Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/withdraw/{account_nanoid}": {
      "post": {
        "summary": "Return sign data for withdraw",
        "tags": [
          "V1"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "from": {
                    "anyOf": [
                      {
                        "type": "string",
                        "minLength": 15,
                        "maxLength": 15,
                        "pattern": "^us\\-",
                        "description": "UserNanoid"
                      },
                      {
                        "type": "string",
                        "minLength": 15,
                        "maxLength": 15,
                        "pattern": "^co\\-",
                        "description": "CompanyNanoid"
                      }
                    ],
                    "description": "Identifier of the user or company initiating the withdrawal."
                  },
                  "amount_cents": {
                    "type": "integer",
                    "description": "Amount to withdraw in cents."
                  },
                  "workspace_nanoid": {
                    "type": "string",
                    "minLength": 15,
                    "maxLength": 15,
                    "pattern": "^te\\-",
                    "description": "TeamNanoid"
                  }
                },
                "required": [
                  "from",
                  "amount_cents"
                ],
                "additionalProperties": false
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "schema": {
              "type": "string",
              "minLength": 15,
              "maxLength": 15,
              "pattern": "^\\wa\\-"
            },
            "in": "path",
            "name": "account_nanoid",
            "required": true,
            "description": "Unique identifier of the withdraw account."
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1
            },
            "in": "header",
            "name": "x-recaptcha-token",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1
            },
            "in": "header",
            "name": "x-recaptcha-action",
            "required": true
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "domain": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name of the domain."
                            },
                            "version": {
                              "type": "string",
                              "description": "Version of the domain."
                            },
                            "chainId": {
                              "type": "number",
                              "description": "Chain ID of the blockchain."
                            },
                            "verifyingContract": {
                              "type": "string",
                              "pattern": "^0x[a-fA-F0-9]{40}$",
                              "description": "Address of the verifying contract."
                            }
                          },
                          "required": [
                            "name",
                            "version",
                            "chainId",
                            "verifyingContract"
                          ],
                          "additionalProperties": false
                        },
                        "types": {
                          "type": "object",
                          "properties": {
                            "Permit": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "type"
                                ],
                                "additionalProperties": false
                              }
                            }
                          },
                          "required": [
                            "Permit"
                          ],
                          "additionalProperties": false
                        },
                        "typed_data": {
                          "type": "object",
                          "properties": {
                            "owner": {
                              "type": "string",
                              "pattern": "^0x[a-fA-F0-9]{40}$"
                            },
                            "spender": {
                              "type": "string",
                              "pattern": "^0x[a-fA-F0-9]{40}$"
                            },
                            "value": {
                              "type": "string"
                            },
                            "nonce": {
                              "type": "string"
                            },
                            "deadline": {
                              "type": "number"
                            }
                          },
                          "required": [
                            "owner",
                            "spender",
                            "value",
                            "nonce",
                            "deadline"
                          ],
                          "additionalProperties": false
                        },
                        "primary_type": {
                          "type": "string",
                          "enum": [
                            "Permit"
                          ],
                          "description": "Primary type of the typed data."
                        }
                      },
                      "required": [
                        "domain",
                        "types",
                        "typed_data",
                        "primary_type"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Bad Request"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Not Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Execute a withdraw",
        "tags": [
          "V1"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "from": {
                    "anyOf": [
                      {
                        "type": "string",
                        "minLength": 15,
                        "maxLength": 15,
                        "pattern": "^us\\-",
                        "description": "UserNanoid"
                      },
                      {
                        "type": "string",
                        "minLength": 15,
                        "maxLength": 15,
                        "pattern": "^co\\-",
                        "description": "CompanyNanoid"
                      }
                    ],
                    "description": "Identifier of the user or company initiating the withdrawal."
                  },
                  "amount_cents": {
                    "type": "integer",
                    "description": "Amount to withdraw in cents."
                  },
                  "workspace_nanoid": {
                    "type": "string",
                    "minLength": 15,
                    "maxLength": 15,
                    "pattern": "^te\\-",
                    "description": "TeamNanoid"
                  },
                  "signer": {
                    "type": "string",
                    "pattern": "^0x[a-fA-F0-9]{40}$",
                    "description": "Address of the signer."
                  },
                  "typed_data": {
                    "type": "object",
                    "properties": {
                      "owner": {
                        "type": "string",
                        "pattern": "^0x[a-fA-F0-9]{40}$"
                      },
                      "spender": {
                        "type": "string",
                        "pattern": "^0x[a-fA-F0-9]{40}$"
                      },
                      "value": {
                        "type": "string"
                      },
                      "nonce": {
                        "type": "string"
                      },
                      "deadline": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "owner",
                      "spender",
                      "value",
                      "nonce",
                      "deadline"
                    ],
                    "additionalProperties": false
                  },
                  "signature": {
                    "type": "string",
                    "pattern": "^0x[a-fA-F0-9]{130}$",
                    "description": "Signature of the transaction."
                  }
                },
                "required": [
                  "from",
                  "amount_cents",
                  "signer",
                  "typed_data",
                  "signature"
                ],
                "additionalProperties": false
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "schema": {
              "type": "string",
              "minLength": 15,
              "maxLength": 15,
              "pattern": "^\\wa\\-"
            },
            "in": "path",
            "name": "account_nanoid",
            "required": true,
            "description": "Unique identifier of the withdraw account."
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1
            },
            "in": "header",
            "name": "x-recaptcha-token",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1
            },
            "in": "header",
            "name": "x-recaptcha-action",
            "required": true
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "transaction": {
                          "type": "string",
                          "minLength": 15,
                          "maxLength": 15,
                          "pattern": "^tx\\-",
                          "description": "Unique identifier of the transaction."
                        }
                      },
                      "required": [
                        "transaction"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Bad Request"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Not Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/withdraw/{account_nanoid}/fee": {
      "get": {
        "summary": "Return the fees for a withdraw account",
        "tags": [
          "V1"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "minLength": 15,
              "maxLength": 15,
              "pattern": "^\\wa\\-"
            },
            "in": "path",
            "name": "account_nanoid",
            "required": true,
            "description": "Unique identifier of the withdraw account."
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "fees": {
                          "type": "array",
                          "items": {
                            "anyOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "flat"
                                    ],
                                    "description": "Flat fee type."
                                  },
                                  "amount_cents": {
                                    "type": "number",
                                    "description": "Flat fee amount in cents."
                                  },
                                  "currency": {
                                    "type": "string",
                                    "description": "Currency of the flat fee."
                                  }
                                },
                                "required": [
                                  "type",
                                  "amount_cents",
                                  "currency"
                                ],
                                "additionalProperties": false
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "percent"
                                    ],
                                    "description": "Percentage fee type."
                                  },
                                  "amount_percent": {
                                    "type": "number",
                                    "description": "Percentage amount of the fee."
                                  },
                                  "currency": {
                                    "type": "string",
                                    "description": "Currency of the percentage fee."
                                  }
                                },
                                "required": [
                                  "type",
                                  "amount_percent",
                                  "currency"
                                ],
                                "additionalProperties": false
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "percent_minimum"
                                    ],
                                    "description": "Minimum percent fee type."
                                  },
                                  "amount_cents": {
                                    "type": "number",
                                    "description": "Minimum percent fee amount in cents."
                                  },
                                  "currency": {
                                    "type": "string",
                                    "description": "Currency of the percent minimum fee."
                                  }
                                },
                                "required": [
                                  "type",
                                  "amount_cents",
                                  "currency"
                                ],
                                "additionalProperties": false
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "conversion"
                                    ],
                                    "description": "Conversion fee type."
                                  },
                                  "rate": {
                                    "type": "number",
                                    "description": "Conversion rate."
                                  },
                                  "source_currency": {
                                    "type": "string",
                                    "description": "Currency being converted from."
                                  },
                                  "destination_currency": {
                                    "type": "string",
                                    "description": "Currency being converted to."
                                  }
                                },
                                "required": [
                                  "type",
                                  "rate",
                                  "source_currency",
                                  "destination_currency"
                                ],
                                "additionalProperties": false
                              }
                            ]
                          }
                        },
                        "fee_coverage": {
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "type": "boolean",
                              "description": "Indicates if fee coverage is enabled."
                            },
                            "client": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "company",
                                    "contractor",
                                    "org_admin",
                                    "org_finance_admin",
                                    "org_viewer",
                                    "team",
                                    "team_admin",
                                    "team_employee",
                                    "team_finance_admin",
                                    "team_viewer",
                                    "user"
                                  ],
                                  "description": "Type of the client."
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Name of the client."
                                },
                                "avatar": {
                                  "type": "string",
                                  "description": "Avatar URL of the client."
                                }
                              },
                              "required": [
                                "type",
                                "name",
                                "avatar"
                              ],
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "enabled"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "fees",
                        "fee_coverage"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Bad Request"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Not Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "enum": [
                        false
                      ]
                    },
                    "data": {
                      "type": "string"
                    },
                    "zod": {},
                    "error_code": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "additionalProperties": false,
                  "description": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "http://127.0.0.1:8080",
      "description": "Local"
    },
    {
      "url": "https://dev-pay-api.riseworks.dev",
      "description": "Development"
    },
    {
      "url": "https://staging-pay-api.riseworks.io",
      "description": "Staging"
    },
    {
      "url": "https://pay-api.riseworks.io",
      "description": "Production"
    }
  ]
}